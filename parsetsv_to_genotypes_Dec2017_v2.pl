#!perl

# generates a genotypes file based on par1 and par2 ancestry probabilities tsv files, generated by MSG or by Ancestry_HMM

#NOTE: this script has a hard call threshold of 0.95 for a given ancestry state

# homozygous par1 coded as 0, homozygous par2 coded as 2
# usage
# perl parsetsv_to_genotypes_Dec2017_v2.pl par1.tsv par2.tsv outname

if (@ARGV<1){
	print "\nusage: perl  parsetsv_to_genotypes_Dec2017_v2.pl par1.tsv par2.tsv outfile_name\n\n"; exit;
}

my $infile = shift(@ARGV); chomp $infile;
open IN, $infile or die "wrong format for in1 infile\n";
my $infile2=shift(@ARGV); chomp $infile2;
open IN2, $infile2 or die "wrong format for in2 infile\n";

my $outfile=shift(@ARGV); chomp $outfile;

open IN, "$infile";
open IN2,"$infile2";
open OUT, ">$outfile";

my $firstline = <IN>; chomp $firstline;                   #this takes care of the first row
my $junk=<IN2>; chomp $junk;
print OUT "id$firstline\n";
while ((my $line = <IN>) && (my $line2=<IN2>)){
    chomp $line; chomp $line2;
    my @fields1 = split(/\t/, $line);
    my $genotype = "";
    my @fields2=split(/\t/,$line2);
  
    print OUT "$fields1[0]\t";
  
    for my $i (1 .. scalar(@fields1)-1){
	#print scalar(@fields1),"\n";
	if(($fields1[$i] ne 'NA')&&($fields2[$i] ne 'NA')){
	if (($fields1[$i]>=0.9)) {$genotype=0;}
	elsif (($fields2[$i] + $fields1[$i])<=0.1){$genotype=1;}
	elsif (($fields2[$i]>=0.9)){$genotype=2;}
	else{$genotype="NA";}
	} else{
	    $genotype="NA";
	}# if either of the genotypes are NA 
	
	if($i != (scalar(@fields1)-1)){
	print OUT "$genotype\t";
	} else{
	    print OUT "$genotype\n";
	}#last line in row
	#print "$i\n";
      } # for all elements of the row
  
} # while the infile has lines in it

